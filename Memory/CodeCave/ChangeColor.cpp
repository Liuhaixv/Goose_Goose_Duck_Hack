#include "ChangeColor.h"
#include "../Memory.cpp"
#include"../../Data/offsets.hpp"
#include"../../utils.hpp"

std::vector<byte> ChangeColor::getFunctionBytes()
{
    std::vector<byte> bytes = utils.combineVectors({
        {0x48,0x83,0xEC,0x40,0x45,0x31,0xC0,0xBA,0x15,0x00,0x00,0x00,0x31,0xC9,0xFF,0x15,0x02,0x00,0x00,0x00,0xEB,0x08},
         utils.addressToLittleEndianBytes(memory.gameAssemblyBaseAddress + GameAssembly::Method::UnityEngine::Random::RandomRangeInt),//UnityEngine.Random.Range
        {0x50,0x48,0xB8},
        utils.addressToLittleEndianBytes(memory.gameAssemblyBaseAddress + GameAssembly::Class::ptr_PlayerCustomizationPanelHandlerClass),//GameAssembly.dll+ptr_PlayerCustomizationPanelHandlerClass
        {0x48,0x8B,0x00,0x48,0x8B,0x80,0xB8,0x00,0x00,0x00,0x48,0x85,0xC0,0x0F,0x84,0x23,0x00,0x00,0x00,0x48,0x8B,0x00,0x48,0x85,0xC0,0x0F,0x84,0x17,0x00,0x00,0x00,0x48,0x8B,0xC8,0x5A,0x45,0x31,0xC0,0xFF,0x15,0x02,0x00,0x00,0x00,0xEB,0x08},
        utils.addressToLittleEndianBytes(memory.gameAssemblyBaseAddress + GameAssembly::Method::PlayerCustomizationPanelHandler::ChangeColor),//Handlers.LobbyHandlers.PlayerCustomizationPanelHandler.ChangeColor
        {0x48,0x83,0xC4,0x48,0xC3}
        });

    return bytes;
}
